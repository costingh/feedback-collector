generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model UserApiLimit {
  id        String   @id @default(cuid())
  userId    String   @unique
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model UserSubscription {
  id                     String    @id @default(cuid())
  userId                 String    @unique
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
}

model Form {
  id                  String          @id @default(cuid())
  name                String
  brandLogo           String
  brandName           String
  backgroundColor     String
  primaryColor        String
  withAnimatedBg      Boolean
  formFields          FormField[]
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  userId              String
  published           Boolean
  isPaused            Boolean
  pausedUntil         DateTime?
  url                 String
  customUrl           String
  FormAnalytics       FormAnalytics[]
  title               String
  description         String
  questions           Question[]
  textareaPlaceholder String
  buttonLabel         String
  FormResponse        FormResponse[]
  thankYouPageTitle   String
  thankYouPageMessage String
  thankYouCustomURL   String
}

model FormField {
  id         String  @id @default(cuid())
  key        String
  isEnabled  Boolean
  isRequired Boolean
  formId     String
  form       Form    @relation(fields: [formId], references: [id])
}

model Question {
  id     String @id @default(cuid())
  text   String
  formId String
  form   Form   @relation(fields: [formId], references: [id])
}

model FormAnalytics {
  id           String @id @default(cuid())
  visits       Int
  testimonials Int
  responseRate Int
  formId       String
  form         Form   @relation(fields: [formId], references: [id])
}

model FormResponse {
  id       String @id @default(cuid())
  stars    Float
  message  String
  name     String
  email    String
  company  String
  jobTitle String
  website  String
  formId   String
  avatar   String
  logo     String
  form     Form   @relation(fields: [formId], references: [id])
}
